import java.util.ArrayList;

public class PrimeThread extends Thread {
    private int end, init;
    int[] v1;
    String name;
    String primeNumbers = "";
    int counter;
    static int count = 0;

    public PrimeThread(String name, int[] v1, int init, int end) {
        setName(name);
        this.v1 = v1;
        this.init = init;
        this.end = end;
    }

    public void run() {
        System.out.println(Thread.currentThread().getName() + " [" + init + "," + end + "] started!");
        int num = 0;


        /*
            The variable 'i' is the number being tested
         */

        for (int i = init; i <= end; i++) {
            /* The 'counter' variable counts the number of factors.
               that number can not be a PRIME NUMBER.
             */
            counter = 0;//counter must be initialized to zero for each new dividend.
            for (num = i; num >= 1; num--)      //num is the divisor.
            {
                if (i % num == 0) {
                    counter = counter + 1;


                }
            }
            if (counter == 2) {
                primeNumbers = primeNumbers + i + ",";
                count++;

            }

        }
        //System.out.println(Thread.currentThread().getName() + " [" + init + "," + end + "]: Prime Numbers found = "  +  " (" + primeNumbers + ")");

    }

    public int getInit(){
        return init;
    }
    public int getEnd(){
        return end;
    }
    public String getThreadName(){
        return Thread.currentThread().getName();
    }

    public static int getPrime() {
        return count;
    }
}

